apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: my-thesis
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "4000"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "4000"
    spec:
      containers:
        - name: backend
          image: ghcr.io/tpspace/thesis-be:latest
          ports:
            - containerPort: 4000
          envFrom:
            - configMapRef:
                name: app-config
          env:
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: db_name
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: db_username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: db_password
            - name: DATASOURCE_URL
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: DATASOURCE_URL
            - name: ROLE_ADMIN_CODE
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: ROLE_ADMIN_CODE
            - name: ROLE_TEACHER_CODE
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: ROLE_TEACHER_CODE
            - name: ROLE_STUDENT_CODE
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: ROLE_STUDENT_CODE
            - name: CLIENT_ORIGIN
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: CLIENT_ORIGIN
            - name: PORT
              value: "4000"
          resources:
            limits:
              cpu: "500m"
              memory: "1024Mi"
            requests:
              cpu: "250m"
              memory: "512Mi"
          readinessProbe:
            httpGet:
              path: /health
              port: 4000
            initialDelaySeconds: 15
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /health
              port: 4000
            initialDelaySeconds: 30
            periodSeconds: 20
      imagePullSecrets:
        - name: ghcr-secret
